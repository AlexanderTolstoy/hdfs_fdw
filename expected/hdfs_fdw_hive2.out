\c postgres
CREATE EXTENSION hdfs_fdw;
CREATE SERVER hdfs_svr FOREIGN DATA WRAPPER hdfs_fdw OPTIONS(port '2000', client_type 'hiveserver2');
CREATE USER MAPPING FOR postgres SERVER hdfs_svr;
CREATE FOREIGN TABLE department(department_id int, department_name text) SERVER hdfs_svr OPTIONS(dbname 'testdb', table_name 'department');
CREATE FOREIGN TABLE employee(emp_id int, emp_name text, emp_dept_id int) SERVER hdfs_svr OPTIONS(dbname 'testdb', table_name 'employee');
SELECT * FROM department LIMIT 10;
 department_id | department_name 
---------------+-----------------
             1 | dept-1
             2 | dept-2
             3 | dept-3
             4 | dept-4
             5 | dept-5
             6 | dept-6
             7 | dept-7
             8 | dept-8
             9 | dept-9
(9 rows)

SELECT * FROM employee LIMIT 10;
 emp_id | emp_name | emp_dept_id 
--------+----------+-------------
      1 | emp-1    |           1
      2 | emp-2    |           2
      3 | emp-3    |           3
      4 | emp-4    |           4
      5 | emp-5    |           5
      6 | emp-6    |           6
      7 | emp-7    |           7
      8 | emp-8    |           8
      9 | emp-9    |           9
     10 | emp-10   |           1
(10 rows)

SELECT count(*) FROM department;
 count 
-------
     9
(1 row)

SELECT count(*) FROM employee;
 count 
-------
    18
(1 row)

EXPLAIN (COSTS FALSE) SELECT * FROM department d, employee e WHERE d.department_id = e.emp_dept_id LIMIT 10;
                      QUERY PLAN                       
-------------------------------------------------------
 Limit
   ->  Merge Join
         Merge Cond: (d.department_id = e.emp_dept_id)
         ->  Sort
               Sort Key: d.department_id
               ->  Foreign Scan on department d
         ->  Sort
               Sort Key: e.emp_dept_id
               ->  Foreign Scan on employee e
(9 rows)

EXPLAIN (COSTS FALSE) SELECT * FROM department d, employee e WHERE d.department_id IN (SELECT department_id FROM department) LIMIT 10;
                           QUERY PLAN                            
-----------------------------------------------------------------
 Limit
   ->  Hash Join
         Hash Cond: (department.department_id = d.department_id)
         ->  Nested Loop
               ->  HashAggregate
                     Group Key: department.department_id
                     ->  Foreign Scan on department
               ->  Materialize
                     ->  Foreign Scan on employee e
         ->  Hash
               ->  Foreign Scan on department d
(11 rows)

SELECT * FROM employee LIMIT 10;
 emp_id | emp_name | emp_dept_id 
--------+----------+-------------
      1 | emp-1    |           1
      2 | emp-2    |           2
      3 | emp-3    |           3
      4 | emp-4    |           4
      5 | emp-5    |           5
      6 | emp-6    |           6
      7 | emp-7    |           7
      8 | emp-8    |           8
      9 | emp-9    |           9
     10 | emp-10   |           1
(10 rows)

SELECT * FROM employee WHERE emp_id IN (1);
 emp_id | emp_name | emp_dept_id 
--------+----------+-------------
      1 | emp-1    |           1
(1 row)

SELECT * FROM employee WHERE emp_id IN (1,3,4,5);
 emp_id | emp_name | emp_dept_id 
--------+----------+-------------
      1 | emp-1    |           1
      3 | emp-3    |           3
      4 | emp-4    |           4
      5 | emp-5    |           5
(4 rows)

SELECT * FROM employee WHERE emp_id IN (10000,1000);
 emp_id | emp_name | emp_dept_id 
--------+----------+-------------
(0 rows)

SELECT * FROM employee WHERE emp_id NOT IN (1) LIMIT 5;
 emp_id | emp_name | emp_dept_id 
--------+----------+-------------
      2 | emp-2    |           2
      3 | emp-3    |           3
      4 | emp-4    |           4
      5 | emp-5    |           5
      6 | emp-6    |           6
(5 rows)

SELECT * FROM employee WHERE emp_id NOT IN (1,3,4,5);
 emp_id | emp_name | emp_dept_id 
--------+----------+-------------
      2 | emp-2    |           2
      6 | emp-6    |           6
      7 | emp-7    |           7
      8 | emp-8    |           8
      9 | emp-9    |           9
     10 | emp-10   |           1
     11 | emp-11   |           2
     12 | emp-12   |           3
     13 | emp-13   |           4
     14 | emp-14   |           5
     15 | emp-15   |           6
     16 | emp-16   |           7
     17 | emp-17   |           8
     18 | emp-18   |           9
(14 rows)

SELECT * FROM employee WHERE emp_id NOT IN (1,4);
 emp_id | emp_name | emp_dept_id 
--------+----------+-------------
      2 | emp-2    |           2
      3 | emp-3    |           3
      5 | emp-5    |           5
      6 | emp-6    |           6
      7 | emp-7    |           7
      8 | emp-8    |           8
      9 | emp-9    |           9
     10 | emp-10   |           1
     11 | emp-11   |           2
     12 | emp-12   |           3
     13 | emp-13   |           4
     14 | emp-14   |           5
     15 | emp-15   |           6
     16 | emp-16   |           7
     17 | emp-17   |           8
     18 | emp-18   |           9
(16 rows)

SELECT * FROM employee WHERE emp_id NOT IN (SELECT emp_id FROM employee WHERE emp_id IN (1,10));
 emp_id | emp_name | emp_dept_id 
--------+----------+-------------
      2 | emp-2    |           2
      3 | emp-3    |           3
      4 | emp-4    |           4
      5 | emp-5    |           5
      6 | emp-6    |           6
      7 | emp-7    |           7
      8 | emp-8    |           8
      9 | emp-9    |           9
     11 | emp-11   |           2
     12 | emp-12   |           3
     13 | emp-13   |           4
     14 | emp-14   |           5
     15 | emp-15   |           6
     16 | emp-16   |           7
     17 | emp-17   |           8
     18 | emp-18   |           9
(16 rows)

SELECT * FROM employee WHERE emp_name NOT IN ('emp-1', 'emp-2');
 emp_id | emp_name | emp_dept_id 
--------+----------+-------------
      3 | emp-3    |           3
      4 | emp-4    |           4
      5 | emp-5    |           5
      6 | emp-6    |           6
      7 | emp-7    |           7
      8 | emp-8    |           8
      9 | emp-9    |           9
     10 | emp-10   |           1
     11 | emp-11   |           2
     12 | emp-12   |           3
     13 | emp-13   |           4
     14 | emp-14   |           5
     15 | emp-15   |           6
     16 | emp-16   |           7
     17 | emp-17   |           8
     18 | emp-18   |           9
(16 rows)

SELECT * FROM employee WHERE emp_name NOT IN ('emp-10');
 emp_id | emp_name | emp_dept_id 
--------+----------+-------------
      1 | emp-1    |           1
      2 | emp-2    |           2
      3 | emp-3    |           3
      4 | emp-4    |           4
      5 | emp-5    |           5
      6 | emp-6    |           6
      7 | emp-7    |           7
      8 | emp-8    |           8
      9 | emp-9    |           9
     11 | emp-11   |           2
     12 | emp-12   |           3
     13 | emp-13   |           4
     14 | emp-14   |           5
     15 | emp-15   |           6
     16 | emp-16   |           7
     17 | emp-17   |           8
     18 | emp-18   |           9
(17 rows)

DROP FOREIGN TABLE department;
DROP FOREIGN TABLE employee;
DROP USER MAPPING FOR postgres SERVER hdfs_svr;
DROP SERVER hdfs_svr;
DROP EXTENSION hdfs_fdw CASCADE;
